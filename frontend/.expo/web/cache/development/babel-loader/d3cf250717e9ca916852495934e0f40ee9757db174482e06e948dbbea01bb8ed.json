{"ast":null,"code":"var _jsxFileName = \"/workspaces/Aetherion_updates/frontend/screens/OracleScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { getOracleInsights } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OracleScreen() {\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const handleSubmit = async () => {\n    if (!prompt.trim()) {\n      Alert.alert('Error', 'Please enter a prompt');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await getOracleInsights(prompt);\n      setResult(res);\n    } catch (err) {\n      Alert.alert('Error', err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(ImageBackground, {\n    source: require(\"../assets/gate.jpg\"),\n    style: styles.background,\n    resizeMode: \"cover\",\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \" \\uD83C\\uDF3F\\uD83D\\uDCAB\\uD83C\\uDF33 Grove Oracle \\uD83C\\uDF33\\uD83D\\uDCAB\\uD83C\\uDF3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Ask the oracle...\",\n        placeholderTextColor: \"#aaa\",\n        multiline: true,\n        value: prompt,\n        onChangeText: setPrompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSubmit,\n        children: loading ? _jsxDEV(ActivityIndicator, {\n          size: \"small\",\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Get Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), result && _jsxDEV(View, {\n        style: styles.resultContainer,\n        children: _jsxDEV(Text, {\n          style: styles.resultText,\n          children: JSON.stringify(result, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  container: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(30, 30, 46, 0.8)',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    color: '#e0c0ff',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: '#2e2e3e',\n    color: '#fff',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 12,\n    height: 100,\n    textAlignVertical: 'top'\n  },\n  button: {\n    backgroundColor: '#8e44ad',\n    padding: 14,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16\n  },\n  resultContainer: {\n    backgroundColor: '#2e2e3e',\n    padding: 12,\n    borderRadius: 8\n  },\n  resultText: {\n    color: '#fff',\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","ScrollView","ActivityIndicator","StyleSheet","Alert","ImageBackground","getOracleInsights","jsxDEV","_jsxDEV","OracleScreen","prompt","setPrompt","loading","setLoading","result","setResult","handleSubmit","trim","alert","res","err","message","source","require","style","styles","background","resizeMode","children","contentContainerStyle","container","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","placeholderTextColor","multiline","value","onChangeText","button","onPress","size","color","buttonText","resultContainer","resultText","JSON","stringify","create","flex","flexGrow","backgroundColor","padding","fontSize","marginBottom","textAlign","borderRadius","height","textAlignVertical","alignItems"],"sources":["/workspaces/Aetherion_updates/frontend/screens/OracleScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  ActivityIndicator,\n  StyleSheet,\n  Alert,\n  ImageBackground,\n} from 'react-native';\nimport { getOracleInsights } from '../services/api';\n\nexport default function OracleScreen() {\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const handleSubmit = async () => {\n    if (!prompt.trim()) {\n      Alert.alert('Error', 'Please enter a prompt');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await getOracleInsights(prompt);\n      setResult(res);\n    } catch (err) {\n      Alert.alert('Error', err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <ImageBackground\n      source={require('../assets/gate.jpg')}\n      style={styles.background}\n      resizeMode=\"cover\"\n    >\n      <ScrollView contentContainerStyle={styles.container}>\n        <Text style={styles.title}> ðŸŒ¿ðŸ’«ðŸŒ³ Grove Oracle ðŸŒ³ðŸ’«ðŸŒ¿</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Ask the oracle...\"\n          placeholderTextColor=\"#aaa\"\n          multiline\n          value={prompt}\n          onChangeText={setPrompt}\n        />\n        <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n          {loading ? (\n            <ActivityIndicator size=\"small\" color=\"#fff\" />\n          ) : (\n            <Text style={styles.buttonText}>Get Insights</Text>\n          )}\n        </TouchableOpacity>\n\n        {result && (\n          <View style={styles.resultContainer}>\n            <Text style={styles.resultText}>\n              {JSON.stringify(result, null, 2)}\n            </Text>\n          </View>\n        )}\n      </ScrollView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n  },\n  container: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(30, 30, 46, 0.8)',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    color: '#e0c0ff',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    backgroundColor: '#2e2e3e',\n    color: '#fff',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 12,\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  button: {\n    backgroundColor: '#8e44ad',\n    padding: 14,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n  resultContainer: {\n    backgroundColor: '#2e2e3e',\n    padding: 12,\n    borderRadius: 8,\n  },\n  resultText: {\n    color: '#fff',\n    fontSize: 14,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}