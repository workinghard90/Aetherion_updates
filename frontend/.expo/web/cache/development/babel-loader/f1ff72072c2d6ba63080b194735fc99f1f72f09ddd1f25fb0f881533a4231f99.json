{"ast":null,"code":"var _jsxFileName = \"/workspaces/Aetherion_updates/frontend/screens/OracleScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { getOracleInsights } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OracleScreen() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const handleSubmit = async () => {\n    if (!prompt.trim()) {\n      Alert.alert(\"Error\", \"Please enter a prompt\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await getOracleInsights(prompt);\n      setResult(res);\n    } catch (err) {\n      Alert.alert(\"Error\", err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(ImageBackground, {\n    source: require(\"../assets/gate.jpg\"),\n    style: styles.background,\n    resizeMode: \"cover\",\n    children: _jsxDEV(View, {\n      style: styles.overlay,\n      children: _jsxDEV(ScrollView, {\n        contentContainerStyle: styles.container,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"\\uD83C\\uDF3F Grove Oracle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          placeholder: \"Ask the oracle...\",\n          placeholderTextColor: \"#aaa\",\n          multiline: true,\n          value: prompt,\n          onChangeText: setPrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleSubmit,\n          children: loading ? _jsxDEV(ActivityIndicator, {\n            size: \"small\",\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this) : _jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"Get Insights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), result && _jsxDEV(View, {\n          style: styles.resultContainer,\n          children: _jsxDEV(Text, {\n            style: styles.resultText,\n            children: JSON.stringify(result, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: \"rgba(0, 0, 0, 0.4)\"\n  },\n  container: {\n    flexGrow: 1,\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    color: \"#e0c0ff\",\n    marginBottom: 20,\n    textAlign: \"center\"\n  },\n  input: {\n    backgroundColor: \"rgba(46, 46, 62, 0.9)\",\n    color: \"#fff\",\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 12,\n    height: 100,\n    textAlignVertical: \"top\"\n  },\n  button: {\n    backgroundColor: \"#8e44ad\",\n    padding: 14,\n    borderRadius: 8,\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  resultContainer: {\n    backgroundColor: \"rgba(46, 46, 62, 0.9)\",\n    padding: 12,\n    borderRadius: 8\n  },\n  resultText: {\n    color: \"#fff\",\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","ScrollView","ActivityIndicator","StyleSheet","Alert","ImageBackground","getOracleInsights","jsxDEV","_jsxDEV","OracleScreen","prompt","setPrompt","loading","setLoading","result","setResult","handleSubmit","trim","alert","res","err","message","source","require","style","styles","background","resizeMode","children","overlay","contentContainerStyle","container","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","placeholderTextColor","multiline","value","onChangeText","button","onPress","size","color","buttonText","resultContainer","resultText","JSON","stringify","create","flex","backgroundColor","flexGrow","padding","fontSize","marginBottom","textAlign","borderRadius","height","textAlignVertical","alignItems"],"sources":["/workspaces/Aetherion_updates/frontend/screens/OracleScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  ActivityIndicator,\n  StyleSheet,\n  Alert,\n  ImageBackground,\n} from \"react-native\";\nimport { getOracleInsights } from \"../services/api\";\n\nexport default function OracleScreen() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const handleSubmit = async () => {\n    if (!prompt.trim()) {\n      Alert.alert(\"Error\", \"Please enter a prompt\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await getOracleInsights(prompt);\n      setResult(res);\n    } catch (err) {\n      Alert.alert(\"Error\", err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <ImageBackground\n      source={require(\"../assets/gate.jpg\")}\n      style={styles.background}\n      resizeMode=\"cover\"\n    >\n      <View style={styles.overlay}>\n        <ScrollView contentContainerStyle={styles.container}>\n          <Text style={styles.title}>ðŸŒ¿ Grove Oracle</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Ask the oracle...\"\n            placeholderTextColor=\"#aaa\"\n            multiline\n            value={prompt}\n            onChangeText={setPrompt}\n          />\n          <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n            {loading ? (\n              <ActivityIndicator size=\"small\" color=\"#fff\" />\n            ) : (\n              <Text style={styles.buttonText}>Get Insights</Text>\n            )}\n          </TouchableOpacity>\n\n          {result && (\n            <View style={styles.resultContainer}>\n              <Text style={styles.resultText}>\n                {JSON.stringify(result, null, 2)}\n              </Text>\n            </View>\n          )}\n        </ScrollView>\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n  },\n  container: {\n    flexGrow: 1,\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    color: \"#e0c0ff\",\n    marginBottom: 20,\n    textAlign: \"center\",\n  },\n  input: {\n    backgroundColor: \"rgba(46, 46, 62, 0.9)\",\n    color: \"#fff\",\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 12,\n    height: 100,\n    textAlignVertical: \"top\",\n  },\n  button: {\n    backgroundColor: \"#8e44ad\",\n    padding: 14,\n    borderRadius: 8,\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16,\n  },\n  resultContainer: {\n    backgroundColor: \"rgba(46, 46, 62, 0.9)\",\n    padding: 12,\n    borderRadius: 8,\n  },\n  resultText: {\n    color: \"#fff\",\n    fontSize: 14,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}